package com.splitemapp.commons.domain;

// Generated Sep 15, 2014 8:09:15 PM by Hibernate Tools 4.0.0

import static javax.persistence.GenerationType.IDENTITY;

import java.util.Date;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.UniqueConstraint;

import com.splitemapp.commons.domain.dto.UserToGroupDTO;

/**
 * UserToGroup generated by hbm2java
 */
@Entity(name = "user_to_group")
@Table(name = "user_to_group", catalog = "splitemapp", uniqueConstraints = @UniqueConstraint(columnNames = {
		"user_id", "group_id" }))
public class UserToGroup implements java.io.Serializable {

	private static final long serialVersionUID = 9173640802573250421L;

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "id", unique = true, nullable = false)
	private Long id;

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "user_id", nullable = false)
	private User user;

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "group_id", nullable = false)
	private Group group;

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "user_status_id", nullable = false)
	private UserToGroupStatus userToGroupStatus;

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "created_at", nullable = false, length = 19)
	private Date createdAt;
	
	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "updated_at", nullable = false, length = 19)
	private Date updatedAt;
	
	@Column(name = "is_admin", nullable = false)
	private boolean isAdmin;

	public UserToGroup() {
		this.createdAt = this.updatedAt = new Date();
	}
	
	public UserToGroup(User user, Group group, UserToGroupStatus userToGroupStatus, UserToGroupDTO userToGroupDTO) {
		this.id = userToGroupDTO.getId();
		this.user = user;
		this.group = group;
		this.userToGroupStatus = userToGroupStatus;
		this.isAdmin = userToGroupDTO.isIsAdmin();
		this.createdAt = userToGroupDTO.getCreatedAt();
		this.updatedAt = userToGroupDTO.getUpdatedAt();
	}

	public UserToGroup(User user, Group group,
			UserToGroupStatus userToGroupStatus, boolean isAdmin) {
		this.user = user;
		this.group = group;
		this.userToGroupStatus = userToGroupStatus;
		this.isAdmin = isAdmin;
	}

	public Long getId() {
		return this.id;
	}

	public void setId(Long id) {
		this.id = id;
	}

	public User getUser() {
		return this.user;
	}

	public void setUser(User user) {
		this.user = user;
	}

	public Group getGroup() {
		return this.group;
	}

	public void setGroup(Group group) {
		this.group = group;
	}

	public UserToGroupStatus getUserToGroupStatus() {
		return this.userToGroupStatus;
	}

	public void setUserToGroupStatus(UserToGroupStatus userToGroupStatus) {
		this.userToGroupStatus = userToGroupStatus;
	}

	public boolean isIsAdmin() {
		return this.isAdmin;
	}

	public void setIsAdmin(boolean isAdmin) {
		this.isAdmin = isAdmin;
	}

	public Date getCreatedAt() {
		return createdAt;
	}

	public void setCreatedAt(Date createdAt) {
		this.createdAt = createdAt;
	}

	public Date getUpdatedAt() {
		return updatedAt;
	}

	public void setUpdatedAt(Date updatedAt) {
		this.updatedAt = updatedAt;
	}

}
