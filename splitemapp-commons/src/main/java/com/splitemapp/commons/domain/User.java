package com.splitemapp.commons.domain;

// Generated Sep 15, 2014 8:09:15 PM by Hibernate Tools 4.0.0

import static javax.persistence.GenerationType.IDENTITY;

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.UniqueConstraint;

import com.splitemapp.commons.constants.TableName;
import com.splitemapp.commons.domain.dto.UserDTO;

/**
 * User generated by hbm2java
 */
@Entity(name = TableName.USER)
@Table(name = TableName.USER, catalog = TableName.SCHEMA, uniqueConstraints = @UniqueConstraint(columnNames = "username"))
public class User extends BaseUpdateableEntity implements java.io.Serializable {

	private static final long serialVersionUID = 8018834364942997890L;

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "id", unique = true, nullable = false)
	private Long id;

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "status_id", nullable = false)
	private UserStatus userStatus;

	@Column(name = "username", unique = true, nullable = false, length = 64)
	private String username;

	@Column(name = "password", length = 40)
	private String password;

	@Column(name = "first_name", length = 45)
	private String firstName;

	@Column(name = "last_name", length = 45)
	private String lastName;

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "last_login", length = 19)
	private Date lastLogin;

	@Column(name = "login_cnt", nullable = false)
	private int loginCnt;

	@Column(name = "created_ip_address", nullable = false, length = 15)
	private String createdIpAddress;

	@Column(name = "updated_ip_address", length = 15)
	private String updatedIpAddress;

	@OneToMany(fetch = FetchType.EAGER, mappedBy = "user")
	private Set<UserToProject> userToProjects = new HashSet<UserToProject>(0);

	@OneToMany(fetch = FetchType.EAGER, mappedBy = "user")
	private Set<UserExpense> userExpenses = new HashSet<UserExpense>(0);

	@OneToMany(fetch = FetchType.EAGER, mappedBy = "user")
	private Set<UserInvite> userInvites = new HashSet<UserInvite>(0);

	@OneToMany(fetch = FetchType.EAGER, mappedBy = "user")
	private Set<UserContactData> userContactDatas = new HashSet<UserContactData>(0);

	@OneToMany(fetch = FetchType.EAGER, mappedBy = "user")
	private Set<UserToGroup> userToGroups = new HashSet<UserToGroup>(0);

	public User() {
	}

	public User(UserStatus userStatus, UserDTO userDTO) {
		super(userDTO.getCreatedAt(), userDTO.getUpdatedAt());
		this.id = userDTO.getId();
		this.userStatus = userStatus;
		this.username = userDTO.getUsername();
		this.password = userDTO.getPassword();
		this.firstName = userDTO.getFirstName();
		this.lastName = userDTO.getLastName();
		this.lastLogin = userDTO.getLastLogin();
		this.loginCnt = userDTO.getLoginCnt();
		this.createdIpAddress = userDTO.getCreatedIpAddress();
		this.updatedIpAddress = userDTO.getUpdatedIpAddress();
	}

	public User(Long id, UserStatus userStatus, String username,
			String password, String firstName, String lastName, Date lastLogin,
			int loginCnt, String createdIpAddress, String updatedIpAddress,
			Set<UserToProject> userToProjects, Set<UserExpense> userExpenses,
			Set<UserInvite> userInvites, Set<UserContactData> userContactDatas,
			Set<UserToGroup> userToGroups) {
		this.id = id;
		this.userStatus = userStatus;
		this.username = username;
		this.password = password;
		this.firstName = firstName;
		this.lastName = lastName;
		this.lastLogin = lastLogin;
		this.loginCnt = loginCnt;
		this.createdIpAddress = createdIpAddress;
		this.updatedIpAddress = updatedIpAddress;
		this.userToProjects = userToProjects;
		this.userExpenses = userExpenses;
		this.userInvites = userInvites;
		this.userContactDatas = userContactDatas;
		this.userToGroups = userToGroups;
	}

	public Long getId() {
		return this.id;
	}

	public void setId(Long id) {
		this.id = id;
	}

	public UserStatus getUserStatus() {
		return this.userStatus;
	}

	public void setUserStatus(UserStatus userStatus) {
		this.userStatus = userStatus;
	}

	public String getUsername() {
		return this.username;
	}

	public void setUsername(String username) {
		this.username = username;
	}

	public String getPassword() {
		return this.password;
	}

	public void setPassword(String password) {
		this.password = password;
	}

	public String getFirstName() {
		return this.firstName;
	}

	public void setFirstName(String firstName) {
		this.firstName = firstName;
	}

	public String getLastName() {
		return this.lastName;
	}

	public void setLastName(String lastName) {
		this.lastName = lastName;
	}

	public Date getLastLogin() {
		return this.lastLogin;
	}

	public void setLastLogin(Date lastLogin) {
		this.lastLogin = lastLogin;
	}

	public int getLoginCnt() {
		return this.loginCnt;
	}

	public void setLoginCnt(int loginCnt) {
		this.loginCnt = loginCnt;
	}

	public String getCreatedIpAddress() {
		return this.createdIpAddress;
	}

	public void setCreatedIpAddress(String createdIpAddress) {
		this.createdIpAddress = createdIpAddress;
	}

	public String getUpdatedIpAddress() {
		return this.updatedIpAddress;
	}

	public void setUpdatedIpAddress(String updatedIpAddress) {
		this.updatedIpAddress = updatedIpAddress;
	}

	public Set<UserToProject> getUserToProjects() {
		return this.userToProjects;
	}

	public void setUserToProjects(Set<UserToProject> userToProjects) {
		this.userToProjects = userToProjects;
	}

	public Set<UserExpense> getUserExpenses() {
		return this.userExpenses;
	}

	public void setUserExpenses(Set<UserExpense> userExpenses) {
		this.userExpenses = userExpenses;
	}

	public Set<UserInvite> getUserInvites() {
		return this.userInvites;
	}

	public void setUserInvites(Set<UserInvite> userInvites) {
		this.userInvites = userInvites;
	}

	public Set<UserContactData> getUserContactDatas() {
		return this.userContactDatas;
	}

	public void setUserContactDatas(Set<UserContactData> userContactDatas) {
		this.userContactDatas = userContactDatas;
	}

	public Set<UserToGroup> getUserToGroups() {
		return this.userToGroups;
	}

	public void setUserToGroups(Set<UserToGroup> userToGroups) {
		this.userToGroups = userToGroups;
	}

}
