package com.splitemapp.service.domainmodel.domain;

// Generated Sep 15, 2014 8:09:15 PM by Hibernate Tools 4.0.0

import java.math.BigDecimal;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Project generated by hbm2java
 */
@Entity
@Table(name = "project", catalog = "splitshares")
public class Project implements java.io.Serializable {

	private static final long serialVersionUID = -1186403556721128678L;
	private Long id;
	private ProjectType projectType;
	private ProjectStatus projectStatus;
	private String title;
	private String imgCover;
	private BigDecimal budget;
	private Date createdAt;
	private Date updatedAt;
	private Set<UserExpenses> userExpenseses = new HashSet<UserExpenses>(0);
	private Set<UserInvite> userInvites = new HashSet<UserInvite>(0);
	private Set<UserToProject> userToProjects = new HashSet<UserToProject>(0);

	public Project() {
	}

	public Project(ProjectType projectType, ProjectStatus projectStatus,
			Date createdAt, Date updatedAt) {
		this.projectType = projectType;
		this.projectStatus = projectStatus;
		this.createdAt = createdAt;
		this.updatedAt = updatedAt;
	}

	public Project(ProjectType projectType, ProjectStatus projectStatus,
			String title, String imgCover, BigDecimal budget, Date createdAt,
			Date updatedAt, Set<UserExpenses> userExpenseses,
			Set<UserInvite> userInvites, Set<UserToProject> userToProjects) {
		this.projectType = projectType;
		this.projectStatus = projectStatus;
		this.title = title;
		this.imgCover = imgCover;
		this.budget = budget;
		this.createdAt = createdAt;
		this.updatedAt = updatedAt;
		this.userExpenseses = userExpenseses;
		this.userInvites = userInvites;
		this.userToProjects = userToProjects;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "id", unique = true, nullable = false)
	public Long getId() {
		return this.id;
	}

	public void setId(Long id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "type_id", nullable = false)
	public ProjectType getProjectType() {
		return this.projectType;
	}

	public void setProjectType(ProjectType projectType) {
		this.projectType = projectType;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "status_id", nullable = false)
	public ProjectStatus getProjectStatus() {
		return this.projectStatus;
	}

	public void setProjectStatus(ProjectStatus projectStatus) {
		this.projectStatus = projectStatus;
	}

	@Column(name = "title", length = 128)
	public String getTitle() {
		return this.title;
	}

	public void setTitle(String title) {
		this.title = title;
	}

	@Column(name = "img_cover", length = 128)
	public String getImgCover() {
		return this.imgCover;
	}

	public void setImgCover(String imgCover) {
		this.imgCover = imgCover;
	}

	@Column(name = "budget", precision = 16, scale = 6)
	public BigDecimal getBudget() {
		return this.budget;
	}

	public void setBudget(BigDecimal budget) {
		this.budget = budget;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "created_at", nullable = false, length = 19)
	public Date getCreatedAt() {
		return this.createdAt;
	}

	public void setCreatedAt(Date createdAt) {
		this.createdAt = createdAt;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "updated_at", nullable = false, length = 19)
	public Date getUpdatedAt() {
		return this.updatedAt;
	}

	public void setUpdatedAt(Date updatedAt) {
		this.updatedAt = updatedAt;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "project")
	public Set<UserExpenses> getUserExpenseses() {
		return this.userExpenseses;
	}

	public void setUserExpenseses(Set<UserExpenses> userExpenseses) {
		this.userExpenseses = userExpenseses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "project")
	public Set<UserInvite> getUserInvites() {
		return this.userInvites;
	}

	public void setUserInvites(Set<UserInvite> userInvites) {
		this.userInvites = userInvites;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "project")
	public Set<UserToProject> getUserToProjects() {
		return this.userToProjects;
	}

	public void setUserToProjects(Set<UserToProject> userToProjects) {
		this.userToProjects = userToProjects;
	}

}
